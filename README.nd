# Submission Reminder App

A simple Linux shell script application that notifies students about upcoming assignment deadlines and checks who has not submitted their work. This app automates setup, uses a modular script structure, and allows assignment updates dynamically through user input.

---

## What I Did

As part of this assignment, I:

- Created the environment setup script `create_environment.sh` to build a full directory structure for the app automatically.
- Populated required files such as `reminder.sh`, `functions.sh`, `config.env`, and `submissions.txt` — including **at least 5 additional student records**.
- Implemented `startup.sh`, the main script that checks for pending submissions.
- Created `copilot_shell_script.sh` that lets users change the assignment name dynamically using `sed` and reruns the reminder check.
- Ensured **all `.sh` scripts are made executable** during setup.
- Used a proper Git branching workflow: worked in `feature/setup`, then merged to `main` with only final files.
- Wrote this `README.md` file with clear, beginner-friendly instructions.

---

## Directory Structure (after setup)

Once `create_environment.sh` is run, the app creates this structure inside `submission_reminder_{YourName}`:

```

submission\_reminder\_{YourName}/
├── config/
│   └── config.env
├── scripts/
│   ├── functions.sh
│   ├── reminder.sh
│   └── startup.sh
├── data/
│   └── submissions.txt
└── image.png

````

---

## 🛠️ How to Run the Application

Follow these steps in your terminal:

### 1. Clone the Repository

```bash
git clone https://github.com/rhoda-n1cole/submission_reminder_App_rhoda-n1cole.git
cd submission_reminder_App_rhoda-n1cole
````

### 2. Make Scripts Executable

```bash
chmod +x create_environment.sh copilot_shell_script.sh
```

### 3. Run the Environment Setup

```bash
./create_environment.sh

```   
  
* You’ll be prompted to enter your name.
* A directory `submission_reminder_App_rhoda-n1cole` will be created.
* All required files and subdirectories will be placed and configured.

### 4. Run the Reminder Application

```bash
cd submission_reminder_App_rhoda-n1cole/scripts
./startup.sh
```

This script will check the current assignment in `config.env` and list students who haven’t submitted it.

---

## Change Assignment Name Dynamically

To update the assignment and re-check for submissions:

```bash
../../copilot_shell_script.sh

```

* This prompts you to enter a new assignment name.
* It will update `config/config.env` and rerun the reminder check using the new assignment.

---

## Testing Tips

* The `submissions.txt` file contains multiple students. Test with different assignment names to see who hasn't submitted.
* You can also edit `submissions.txt` to simulate new data.

---

## Git Branching Workflow Used

* **`feature/setup`** – All development was done here.
* **`main`** – Final merged branch. Only contains:

  * `create_environment.sh`
  * `copilot_shell_script.sh`
  * `README.md`

---

## Files Included in This Repo

| File                      | Description                                     |
| ------------------------- | ----------------------------------------------- |
| `create_environment.sh`   | Sets up the environment and directory structure |
| `copilot_shell_script.sh` | Updates assignment name and reruns the app      |
| `README.md`               | This file, containing full documentation        |

---

## Learning Outcomes

* Wrote and debugged real-world shell scripts.
* Automated file/directory creation using `bash`.
* Practiced config file parsing and modification using `sed`.
* Applied Git branching and version control principles.
* Developed a clean and modular Linux-based app.

---

## License

This project is for educational use as part of a lab assignment.

```